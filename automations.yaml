- id: weekday_alarm
  alias: Week day alarm automation
  trigger:
  - minutes: /1
    platform: time
    seconds: 0
  condition:
  - condition: state
    entity_id: input_boolean.alarmweekon
    state: 'on'
  - condition: state
    entity_id: input_boolean.alarmweekday
    state: 'on'
  - condition: time
    weekday:
    - mon
    - tue
    - wed
    - thu
    - fri
  - condition: template
    value_template: '{{ now().strftime("%H:%M") == states.sensor.alarm_time.state
      }}'
  action:
  - service: script.turn_on
    data:
      entity_id: script.wakeup
- id: weekend_alarm
  alias: Weekend alarm automation
  trigger:
  - minutes: /1
    platform: time
    seconds: 0
  condition:
  - condition: state
    entity_id: input_boolean.alarmweekon
    state: 'on'
  - condition: state
    entity_id: input_boolean.alarmweekday
    state: 'off'
  - condition: time
    weekday:
    - sat
    - sun
  - condition: template
    value_template: '{{ now().strftime("%H:%M") == states.sensor.alarm_time.state
      }}'
  action:
  - service: script.turn_on
    data:
      entity_id: script.wakeup
- id: turn_on_hyperion_in_evenings
  alias: Turn On Hyperion Service On Sunset
  trigger:
  - entity_id: device_tracker.hermesmobile
    platform: state
    to: home
  condition:
  - after: sunset
    condition: sun
  action:
  - data:
      entity_id: switch.hyperion_service
    service: switch.turn_on
- id: media_playing_light_off
  alias: Media player playing
  trigger:
  - entity_id: media_player.kodi_omc
    platform: state
    from: paused
    to: playing
  - entity_id: media_player.kodi_omc
    platform: state
    from: idle
    to: playing
  condition:
  - condition: state
    entity_id: sun.sun
    state: below_horizon
  action:
  - service: scene.turn_on
    data:
      entity_id: scene.room_dim
- id: omc_start_playing_turn_on_socket
  alias: Omc is playing
  trigger:
  - entity_id: media_player.kodi_omc
    platform: state
    to: playing
  action:
  - data:
      entity_id: switch.strip_cord
    service: switch.turn_on
- id: vol_changed_set_media_vol
  alias: "Auto: Sets volume on mediavolume change"
  trigger:
    platform: state
    entity_id: input_number.mediavolume
  action:
  - data:
      entity_id: script.set_volume_on_selected
    service: script.turn_on
- id: "pentagon_animation_speed"
  initial_state: True
  hide_entity: False
  trigger:
    - platform: state
      entity_id: input_number.pentagon_animation_speed
  action:
    - service: mqtt.publish
      data_template:
        topic: "fun/pentagon/set"
        payload: '{"transition":{{ trigger.to_state.state | int }}}'
